"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hsnode_1 = require("hsnode");
const log = new hsnode_1.Log('Init');
const Foscam_1 = require("../device/Foscam");
const WansView_1 = require("../device/WansView");
const Comm = require("./CommandReceiver");
const Exec = require("./CommandExecution");
const UserComm_1 = require("../comm/UserComm");
const Device_1 = require("../device/Device");
function addCommands() {
    Comm.addCommand(Exec.helpFn, 'help');
    Comm.addCommand(Exec.facetimeFn, 'facetime');
    Comm.addCommand(Exec.armFn, 'arm', '[away]');
    Comm.addCommand(Exec.disarmFn, 'disarm');
    Comm.addCommand(Exec.disarmFn, 'relax');
    Comm.addCommand(Exec.armingStatusFn, 'status');
    Comm.addCommand(Exec.snapFn, 'snap');
    Comm.addCommand(Exec.lightFn, 'light', 'on|off');
    Comm.addCommand(Exec.restartFn, 'restart');
    log.debug(`added ${Comm.getCommands().length} commands`);
}
function createDevices(settings) {
    settings.devices.map((dev) => {
        if (dev.type === 'foscam') {
            new Foscam_1.Foscam(dev, settings);
        }
        if (dev.type === 'wansview') {
            new WansView_1.WansView(dev, settings);
        }
        log.debug(`created device '${dev.name}'`);
    });
}
exports.startSecuritySystem = (settings) => {
    log.logFile(`${settings.homeSecDir}${settings.logDir}${settings.logFile}`);
    settings.users.map(user => UserComm_1.users.addUser(user));
    UserComm_1.users.setDefaultRecipient(settings.activeRecipient);
    createDevices(settings);
    addCommands();
    new Comm.EmailPolling(5000);
    log.info('security system started');
    return settings;
};
exports.startSecuritySystemTestMode = (settings) => {
    log.logFile(`${settings.homeSecDir}/${settings.logDir}/${settings.logFile}`);
    return settings;
};
exports.initDevices = (settings) => {
    Exec.setSnapshotDir(`${settings.homeSecDir}/${settings.recDir}/`);
    Device_1.DeviceList.getDevices().map((dev) => dev.initDevice(settings));
    log.info(`devices initialized: ${Device_1.DeviceList.getDevices().map(d => d.getName()).join(', ')}`);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5pdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlL2NvcmUvSW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUEwQztBQUFFLE1BQU0sR0FBRyxHQUFHLElBQUksWUFBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3hFLDZDQUFvRDtBQUNwRCxpREFBc0Q7QUFDdEQsMENBQXFEO0FBQ3JELDJDQUFzRDtBQUV0RCwrQ0FBb0Q7QUFDcEQsNkNBRW9EO0FBR3BEO0lBQ0ksSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFTLE1BQU0sQ0FBQyxDQUFDO0lBQzVDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBSyxVQUFVLENBQUMsQ0FBQztJQUNoRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQVUsS0FBSyxFQUFPLFFBQVEsQ0FBQyxDQUFDO0lBQzFELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBTyxRQUFRLENBQUMsQ0FBQztJQUM5QyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQU8sT0FBTyxDQUFDLENBQUM7SUFDN0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBUyxNQUFNLENBQUMsQ0FBQztJQUM1QyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQVEsT0FBTyxFQUFLLFFBQVEsQ0FBQyxDQUFDO0lBQzFELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBTSxTQUFTLENBQUMsQ0FBQztJQUMvQyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLE1BQU0sV0FBVyxDQUFDLENBQUM7QUFDN0QsQ0FBQztBQUVELHVCQUF1QixRQUFpQjtJQUNwQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQWtCLEVBQUUsRUFBRTtRQUN4QyxJQUFJLEdBQUcsQ0FBQyxJQUFJLEtBQUssUUFBUSxFQUFJO1lBQUUsSUFBSSxlQUFNLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQUU7UUFDM0QsSUFBSSxHQUFHLENBQUMsSUFBSSxLQUFLLFVBQVUsRUFBRTtZQUFFLElBQUksbUJBQVEsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FBRTtRQUM3RCxHQUFHLENBQUMsS0FBSyxDQUFDLG1CQUFtQixHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUM5QyxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUM7QUFLWSxRQUFBLG1CQUFtQixHQUFHLENBQUMsUUFBaUIsRUFBVyxFQUFFO0lBQzlELEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxRQUFRLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDM0UsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxnQkFBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2hELGdCQUFLLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ3BELGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4QixXQUFXLEVBQUUsQ0FBQztJQUNkLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixHQUFHLENBQUMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDcEMsT0FBTyxRQUFRLENBQUM7QUFDcEIsQ0FBQyxDQUFDO0FBRVcsUUFBQSwyQkFBMkIsR0FBRyxDQUFDLFFBQWlCLEVBQVcsRUFBRTtJQUN0RSxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsUUFBUSxDQUFDLFVBQVUsSUFBSSxRQUFRLENBQUMsTUFBTSxJQUFJLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQzdFLE9BQU8sUUFBUSxDQUFDO0FBQ3BCLENBQUMsQ0FBQztBQUVXLFFBQUEsV0FBVyxHQUFHLENBQUMsUUFBaUIsRUFBRSxFQUFFO0lBQzdDLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxRQUFRLENBQUMsVUFBVSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2xFLG1CQUFVLENBQUMsVUFBVSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBVSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDdEUsR0FBRyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsbUJBQVUsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQy9GLENBQUMsQ0FBQyJ9