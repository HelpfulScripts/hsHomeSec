"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hsnode_1 = require("hsnode");
const log = new hsnode_1.Log('Init');
const Foscam_1 = require("../device/Foscam");
const WansView_1 = require("../device/WansView");
const Comm = require("./CommandReceiver");
const Exec = require("./CommandExecution");
const UserComm_1 = require("../comm/UserComm");
const Device_1 = require("../device/Device");
function addCommands() {
    Comm.addCommand(Exec.helpFn, 'help');
    Comm.addCommand(Exec.facetimeFn, 'facetime');
    Comm.addCommand(Exec.armFn, 'arm', '[away]');
    Comm.addCommand(Exec.disarmFn, 'disarm');
    Comm.addCommand(Exec.disarmFn, 'relax');
    Comm.addCommand(Exec.armingStatusFn, 'status');
    Comm.addCommand(Exec.snapFn, 'snap', '[%name%]');
    Comm.addCommand(Exec.lightFn, 'light', 'on|off');
    Comm.addCommand(Exec.restartFn, 'restart');
    Comm.addCommand(Exec.camPreset, 'preset', '%name%', '%index%');
    log.debug(`added ${Comm.getCommands().length} commands`);
}
function createDevices(settings) {
    settings.devices.map((dev) => {
        if (dev.type === 'foscam') {
            new Foscam_1.Foscam(dev, settings);
        }
        if (dev.type === 'wansview') {
            new WansView_1.WansView(dev, settings);
        }
        log.debug(`created device '${dev.name}'`);
    });
}
exports.startSecuritySystem = (settings) => {
    log.logFile(`${settings.homeSecDir}${settings.logDir}${settings.logFile}`);
    settings.users.map(user => UserComm_1.users.addUser(user));
    UserComm_1.users.setDefaultRecipient(settings.activeRecipient);
    createDevices(settings);
    addCommands();
    new Comm.EmailPolling(5000);
    log.info('security system started');
    return settings;
};
exports.startSecuritySystemTestMode = (settings) => {
    log.logFile(`${settings.homeSecDir}/${settings.logDir}/${settings.logFile}`);
    return settings;
};
exports.initDevices = (settings) => {
    Exec.setSnapshotDir(`${settings.homeSecDir}/${settings.recDir}/`);
    Device_1.DeviceList.getDevices().map((dev) => dev.initDevice(settings));
    log.info(`devices initialized: ${Device_1.DeviceList.getDevices().map(d => d.getName()).join(', ')}`);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5pdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ub2RlL2NvcmUvSW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUEwQztBQUFFLE1BQU0sR0FBRyxHQUFHLElBQUksWUFBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3hFLDZDQUFvRDtBQUNwRCxpREFBc0Q7QUFDdEQsMENBQXFEO0FBQ3JELDJDQUFzRDtBQUV0RCwrQ0FBb0Q7QUFDcEQsNkNBRW9EO0FBR3BEO0lBQ0ksSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFTLE1BQU0sQ0FBQyxDQUFDO0lBQzVDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBSyxVQUFVLENBQUMsQ0FBQztJQUNoRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQVUsS0FBSyxFQUFPLFFBQVEsQ0FBQyxDQUFDO0lBQzFELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBTyxRQUFRLENBQUMsQ0FBQztJQUM5QyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQU8sT0FBTyxDQUFDLENBQUM7SUFDN0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBUyxNQUFNLEVBQU0sVUFBVSxDQUFDLENBQUM7SUFDNUQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFRLE9BQU8sRUFBSyxRQUFRLENBQUMsQ0FBQztJQUMxRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQU0sU0FBUyxDQUFDLENBQUM7SUFDL0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFNLFFBQVEsRUFBSSxRQUFR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